datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Criar a tabela de items no CockroachDB
//          # ID                  # Identificador único do item                                      # PRIMARY KEY
//          # NAME                # Nome do item                                                     # STRING
//          # PRICES              # é UM OBJETO com o valor do item {metal: 9.33, keys: 2}           # OBJECT
model Item {
    id        BigInt      @id @default(autoincrement()) // Primary key
    name      String      @unique // Unique constraint
    prices    Json        // JSON object with prices
    Listing Listing[]  // One-to-many relation to Listing
}

// Criar a tabela de listings no CockroachDB
//         # ID                       # Identificador único do item                                      # PRIMARY KEY
//         # steamid                  # é o id da steam do usuário que está vendendo o item              # FOREIGN KEY
//         # currencies               # é UM OBjETO com o valor do item {metal: 9.33, keys: 2}           # OBJECT
//         # trade_offers_preferred   # é um booleano que indica se o usuário prefere trade offers       # BOOLEAN
//         # listed_at                # é a data e hora que o item foi listado                           # NUMBER
//         # bumped_at                # é a data e hora que o item foi bumpado                           # NUMBER
//         # intent                   # é o tipo de transação que o item está sendo vendido (buy, sell)  # STRING
//         # user_agent               # client (nome) lastPulse: num                                     # OBJETO
//         # only_buyout              # é um booleano que indica se o usuário só aceita buy outs         # BOOLEAN
//         # item_id                  # é o id do item que está sendo vendido                            # FOREIGN KEY

model Listing {
    id                      String     @id
    steamid                 String
    currencies              Json
    trade_offers_preferred  Boolean
    only_buyout             Boolean
    listed_at               BigInt
    bumped_at               BigInt
    intent                  String
    user_agent              Json
    item_name               String
    item_id                 BigInt    // Foreign key referencing Item.id
    item                    Item      @relation(fields: [item_id], references: [id])
}